export HISTSIZE=20000
export HISTFILESIZE=20000
export PS1="\w # "
export HISTFILE=/robot_ws/.docker_bash_history

alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'

alias git_subdir_status='find . -maxdepth 1 -mindepth 1 -type d -exec sh -c '\''(echo {} && cd {} && git status && echo)'\'' \;'

alias killros='pkill -9 -f ros; ps ax | grep ros'

alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'

alias se='. ~/.bashrc'

alias bringup_jeep='ros2 launch elsabot_jeep bringup.launch.py'
alias bringup_4wd='ros2 launch elsabot_4wd bringup.launch.py'
alias bringup_4wd_gps='ros2 launch elsabot_4wd bringup.launch.py use_gps:=True use_rtk:=True'
alias create2_bringup='ros2 launch create_bringup create_2.launch.py'

alias nav='ros2 launch elsabot_jeep navigation.launch.py'
alias nav2_follow='ros2 launch nav2_bringup bringup_launch.py use_sim_time:=False autostart:=True map:=/robot_ws/mymap_ds3.yaml params_file:=/robot_ws/nav2_params.yaml  default_bt_xml_filename:=/ros2_main/rav2_ws/src/navigation2/nav2_bt_navigator/behavior_trees/follow_point.xml'
alias nav_4wd='ros2 launch elsabot_4wd navigation.launch.py cmd_vel_topic:=cmd_vel/nav'
alias nav_4wd_gps='ros2 launch elsabot_4wd navigation.launch.py use_gps:=True'
alias navloop='ros2 launch elsabot_bt  elsabot_bt.launch.py  bt_xml:=/robot_ws/src/elsabot_bt/bt_xml/bt_nav_loop.xml'

alias run_head='ros2 launch robot_head robot_head.launch.py'
alias run_head_4wd='ros2 launch robot_head robot_head.launch.py cmd_vel_topic:=cmd_vel/tracker'
alias run_tracker='ros2 run robot_head tracker'
alias run_viewer='ros2 run robot_head viewer'
alias run_vision='ros2 run robot_head vision'
alias run_face='ros2 run robot_head face'

alias speech_in='ros2 launch speech_input_server speech_in.launch.py'
alias speech_out='ros2 run speech_output_server speech_output_action_server'

alias run_bt='ros2 run elsabot_bt elsabot_bt --ros-args -p bt_xml:=/robot_ws/src/elsabot_bt/bt_xml/bt_game_top.xml'

alias run_arm_on_elsabot='ros2 launch xarm_moveit_config demo.launch_elsabot.py'
alias run_arm='ros2 launch xarm_moveit_config demo.launch.py'

alias ros_video='ros2 run web_video_server web_video_server'
alias web_bridge='/opt/ros/galactic/lib/rosbridge_server/rosbridge_websocket.py'

alias start='export DISPLAY=:0;ros2 launch elsabot_bt elsabot_bt.launch.py'
alias start_base='ros2 launch elsa_bot_b elsa_bot_b.launch.py'
alias start_base_office='ros2 launch elsa_bot_b elsa_bot_b.launch.py map:=/robot_ws/src/elsa_bot_b/maps/map_office.yaml use_keep_out:=True'
alias start_base_slam='ros2 launch elsa_bot_b elsa_bot_b.launch.py slam:=True'
alias start_no_bt='export DISPLAY=:0;ros2 launch elsabot_bt elsabot_bt.launch.py run_bt:=False'

alias teleop='ros2 launch elsabot_jeep joy_teleop.launch.py'
alias tf2_mon='ros2 run tf_monitor monitor_node.py'

alias track='ros2 launch elsabot_bt  elsabot_bt.launch.py  bt_xml:=/robot_ws/src/elsabot_bt/bt_xml/bt_track.xml'

alias identify='hailortcli fw-control identify'
alias scan='hailortcli scan'
#FIX
alias tappas_compile='/scripts/gstreamer/install_hailo_gstreamer.sh --skip-hailort'

alias wlstat='iw dev wlo2 link'

alias ros2_build='colcon build --parallel-workers 2 --symlink-install'

export GAME_DATA_DIR=/robot_ws/elsabot_game_data
export SPEECH_SDK_PATH=/opt/ms_speech/

# Source the device env vars that map devices to dev sym links
. elsabot_docker/device_env_vars.env 

# Load private env data such as auth tokens, etc
if [ -e robot_private.env ]; then
  . robot_private.env
fi  

. /opt/ros/jazzy/setup.bash
if [ -e install/setup.bash ]; then
  . install/setup.bash
else 
  echo "No local ROS env available"  
fi  
